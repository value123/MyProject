
ext {
    //Android
    androidCompileSdkVersion = 23
    androidBuildToolsVersion = '23.0.2'
    androidTargetSdkVersion = 22
    androidMinSdkVersion = 14

    //Dependencies

    appDependencies = [
            support_v4: 'com.android.support:support-v4:23.2.0',
            support_appcompat: 'com.android.support:appcompat-v7:23.2.0',
            support_design: 'com.android.support:design:23.2.0',
            butterknife: 'com.jakewharton:butterknife:6.0.0',
            apt: 'com.neenbedankt.gradle.plugins:android-apt:1.8',
            junit: 'junit:junit:4.12',
            timePicker:'com.jzxiang.pickerview:TimePickerDialog:1.0.1',
            gson: 'com.google.code.gson:gson:2.3.1',
            //å¼•å…¥Retrofit2+RxJava+OKHttp3
            retrofit2: 'com.squareup.retrofit2:retrofit:2.0.1',
            retrofit2_adapter_rxjava: 'com.squareup.retrofit2:adapter-rxjava:2.0.0',
            retrofit2_converter_gson: 'com.squareup.retrofit2:converter-gson:2.0.0',
            rxandroid: 'io.reactivex:rxandroid:0.22.0',
            okhttp3: 'com.squareup.okhttp3:okhttp:3.2.0',
    ]
    appDps = [
            support_v4 : 'compile',
            support_appcompat : 'compile',
            butterknife : 'compile',
            apt: 'apt',
            junit: 'testCompile',
            timePicker:'compile'
    ]

    pullrefreshDps = [
            support_v4 : 'compile',
            support_appcompat : 'compile',
            butterknife : 'compile',
            junit: 'testCompile'
    ]

    issBaseDps = [
            support_v4 : 'compile',
            gson : 'compile'
    ]

    retrofit2rxDps = [
            butterknife : 'compile',
            junit: 'testCompile',
            retrofit2: 'compile',
            retrofit2_adapter_rxjava: 'compile',
            retrofit2_converter_gson:'compile',
            rxandroid: 'compile',
            okhttp3: 'compile'
    ]

    dependenciesMethod = {dps, closure ->
        dps.each { entry ->
            def value = entry.value
            if (value instanceof List) {
                value.each { result ->
                    closure result, appDependencies.get(entry.key), entry.key
                }
            } else {
                closure value, appDependencies.get(entry.key), entry.key
            }
        }
    }
}